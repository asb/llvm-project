; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s --mtriple=wasm32 -mattr=+reference-types | FileCheck %s

!0 = !{!"array i32"}
!wasm.type_info = !{!0}
%array_i32 = type ptr addrspace(257)

%alloca_cell = type ptr addrspace(1)

; We have a set of tests in which we set a local and then reload the
; local.  If the load immediately follows the set, the DAG combiner will
; infer that the reloaded value is the same value that was set, which
; isn't what we want to test.  To inhibit this optimization, we include
; an opaque call between the store and the load.
declare void @inhibit_store_to_load_forwarding()

; Test case based on ir-locals.ll

define %array_i32 @ir_local_array_i32(%array_i32 %arg) {
 %retval = alloca %array_i32, addrspace(1)
 store %array_i32 %arg, %alloca_cell %retval
 call void @inhibit_store_to_load_forwarding()
 %reloaded = load %array_i32, %alloca_cell %retval
 ret %array_i32 %reloaded
}
